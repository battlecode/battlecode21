"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.abspath(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET', 'asdf')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', False)

ALLOWED_HOSTS = ['*']


# The URL of the application
THIS_URL = 'https://2021.battlecode.org'

# TODO: update this every time we update maps
SERVER_MAPS = [
  "maptestsmall",
  "circle",
  "quadrants",
  "Andromeda",
  "Arena",
  "Bog",
  "Branches",
  "Chevron",
  "Corridor",
  "Cow",
  "CrossStitch",
  "CrownJewels",
  "ExesAndOhs",
  "FiveOfHearts",
  "Gridlock",
  "Illusion",
  "NotAPuzzle",
  "Rainbow",
  "SlowMusic",
  "Snowflake",
  "BadSnowflake",
  "CringyAsF",
  "FindYourWay",
  "GetShrekt",
  "Goldfish",
  "HexesAndOhms",
  "Licc",
  "MainCampus",
  "Punctuation",
  "Radial",
  "SeaFloor",
  "Sediment",
  "Smile",
  "SpaceInvaders",
  "Surprised",
  "VideoGames",
  "AmidstWe",
  "BattleCode",
  "BattleCodeToo",
  "BlobWithLegs",
  "ButtonsAndBows",
  "CowTwister",
  "Extensions",
  "Hourglass",
  "Maze",
  "NextHouse",
  "Superposition",
  "TicTacTie",
  "UnbrandedWordGame",
  "Z",
  "Zodiac",
  "Flawars",
  "FrogOrBath",
  "HappyBoba",
  "Networking",
  "NoInternet",
  "PaperWindmill",
  "Randomized",
  "Star",
  "Tiger",
  "WhatISeeInMyDreams",
  "Yoda",
  "Blotches",
  "CToE",
  "Circles",
  "EggCarton",
  "InaccurateBritishFlag",
  "JerryIsEvil",
  "Legends",
  "Mario",
  "Misdirection",
  "OneCallAway",
  "Saturn",
  "Stonks",
  "TheClientMapEditorIsSuperiorToGoogleSheetsEom",
  "TheSnackThatSmilesBack",
]

# this is the constant used in the ELO calculation
ELO_K = 32
# this is the start rating, after 1 submission
ELO_START = 1200
# this is the null rating
# real elo will more or less never get to 0 so this is fine
ELO_NULL = -1000000


class COMPILE_STATUS:
    """
    Class used to enum compile status constants used in compilation_update
    """
    PROGRESS = 0
    SUCCESS = 1
    FAIL = 2
    ERROR = 3
    UPLOADED = 4
    QUEUED = 5


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'webpack_loader',
    'rest_framework',
    'django_rest_passwordreset',
    'api',
    'google.cloud',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'api.email_helpers.EmailMiddleware'
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
APPEND_SLASH = True

# Email
# Gmail:
# (As of now, gmail is unused, since it's difficult for the backend server to log in -- 
# Gmail blocks this for security reasons)
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'mitbattlecode@gmail.com'
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_PASS", "redacted")
ROOT_URLCONF = 'urls'

# Sendgrid:
SENDGRID_API_KEY = os.getenv("SENDGRID_API_KEY", "redacted")

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wsgi.application'


# Webpack

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'bundles/local/',
    }
}


# Rest Framework

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 200,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'battlecode',
        'USER': 'battlecode',
        'PASSWORD': os.getenv('DB_PASS'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': 5432,
    }
}


# Authentication

AUTH_USER_MODEL = 'api.User'


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=5),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=5),
    'SLIDING_TOKEN_LIFETIME': timedelta(days=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=5),
}


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/api-static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# Testing

TEST_RUNNER = "django_nose.NoseTestSuiteRunner"


# google cloud
GOOGLE_APPLICATION_CREDENTIALS = os.getenv('GOOGLE_APPLICATION_CREDENTIALS')
