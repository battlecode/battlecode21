// automatically generated by the FlatBuffers compiler, do not modify

package battlecode.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
/**
 * A vector in two-dimensional space. Discrete space, of course.
 * Defaults to the 0 vector.
 */
public final class Vec extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Vec __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int x() { return bb.getInt(bb_pos + 0); }
  public int y() { return bb.getInt(bb_pos + 4); }

  public static int createVec(FlatBufferBuilder builder, int x, int y) {
    builder.prep(4, 8);
    builder.putInt(y);
    builder.putInt(x);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Vec get(int j) { return get(new Vec(), j); }
    public Vec get(Vec obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

